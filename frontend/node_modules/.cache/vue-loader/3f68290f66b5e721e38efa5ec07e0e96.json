{"remainingRequest":"C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\src\\pages\\User-Register.vue?vue&type=template&id=1cf02811&scoped=true&","dependencies":[{"path":"C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\src\\pages\\User-Register.vue","mtime":1555230546000},{"path":"C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\SoftwareProject2\\BDICCOMP3030JG6666\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"register register-with-news-feed\" }, [\n    _vm._m(0),\n    _c(\"div\", { staticClass: \"right-content\" }, [\n      _vm._m(1),\n      _c(\"div\", { staticClass: \"register-content\" }, [\n        _c(\n          \"form\",\n          {\n            staticClass: \"margin-bottom-0\",\n            attrs: { action: \"\" },\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n                return _vm.submitForm($event)\n              }\n            }\n          },\n          [\n            _vm._m(2),\n            _c(\"div\", { staticClass: \"row row-space-10\" }, [\n              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: {\n                        required: true,\n                        regex: /^[_a-zA-Z0-9\\u4E00-\\u9FA5]{2,10}$/\n                      },\n                      expression:\n                        \"{ required: true, regex:/^[_a-zA-Z0-9\\\\u4E00-\\\\u9FA5]{2,10}$/ }\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.formData.username,\n                      expression: \"formData.username\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  class: { \"is-invalid\": _vm.errors.has(\"user name\") },\n                  attrs: {\n                    type: \"text\",\n                    placeholder: \"User Name\",\n                    name: \"user name\"\n                  },\n                  domProps: { value: _vm.formData.username },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.formData, \"username\", $event.target.value)\n                    }\n                  }\n                }),\n                _c(\"span\", { staticStyle: { color: \"red !important\" } }, [\n                  _vm._v(_vm._s(_vm.errors.first(\"user name\")))\n                ]),\n                _c(\"br\"),\n                _c(\"small\", { staticClass: \"text-muted\" }, [\n                  _vm._v(\n                    \"· Username should be between 2 and 10 characters long.\"\n                  )\n                ]),\n                _c(\"br\"),\n                _c(\"small\", { staticClass: \"text-muted\" }, [\n                  _vm._v(\n                    \"· Can contain any Chinese characters, any English letters from a to z (or A to Z).\"\n                  )\n                ]),\n                _c(\"br\"),\n                _c(\"small\", { staticClass: \"text-muted\" }, [\n                  _vm._v(\n                    \"· Can contain any numbers from 0 through 9 and _ (underscore) character.\"\n                  )\n                ])\n              ])\n            ]),\n            _c(\"br\"),\n            _vm._m(3),\n            _c(\"div\", { staticClass: \"row m-b-15\" }, [\n              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: {\n                        required: true,\n                        regex: /^[_!?,.*#a-zA-Z0-9]{6,20}$/\n                      },\n                      expression:\n                        \"{ required: true, regex:/^[_!?,.*#a-zA-Z0-9]{6,20}$/ }\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.formData.password,\n                      expression: \"formData.password\"\n                    }\n                  ],\n                  ref: \"password\",\n                  staticClass: \"form-control\",\n                  class: { \"is-invalid\": _vm.errors.has(\"password\") },\n                  attrs: {\n                    type: \"password\",\n                    placeholder: \"Password\",\n                    name: \"password\"\n                  },\n                  domProps: { value: _vm.formData.password },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.formData, \"password\", $event.target.value)\n                    }\n                  }\n                }),\n                _c(\"span\", { staticStyle: { color: \"red !important\" } }, [\n                  _vm._v(_vm._s(_vm.errors.first(\"password\")))\n                ])\n              ])\n            ]),\n            _vm._m(4),\n            _c(\"div\", { staticClass: \"row m-b-15\" }, [\n              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: \"required|confirmed:password\",\n                      expression: \"'required|confirmed:password'\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.formData.confirm_password,\n                      expression: \"formData.confirm_password\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  class: { \"is-invalid\": _vm.errors.has(\"confirm_password\") },\n                  attrs: {\n                    name: \"confirm_password\",\n                    type: \"password\",\n                    placeholder: \"Password, Again\",\n                    \"data-vv-as\": \"password\"\n                  },\n                  domProps: { value: _vm.formData.confirm_password },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(\n                        _vm.formData,\n                        \"confirm_password\",\n                        $event.target.value\n                      )\n                    }\n                  }\n                }),\n                _vm.errors.has(\"confirm_password\")\n                  ? _c(\"div\", { staticStyle: { color: \"red\" } }, [\n                      _vm._v(_vm._s(_vm.errors.first(\"confirm_password\")))\n                    ])\n                  : _vm._e(),\n                _c(\"br\"),\n                _c(\"small\", { staticClass: \"text-muted\" }, [\n                  _vm._v(\n                    \"· Password should be between 6 and 20 characters long.\"\n                  )\n                ]),\n                _c(\"br\"),\n                _c(\"small\", { staticClass: \"text-muted\" }, [\n                  _vm._v(\n                    \"· Can contain any English letters from a to z and any numbers from 0 through 9.\"\n                  )\n                ]),\n                _c(\"br\"),\n                _c(\"small\", { staticClass: \"text-muted\" }, [\n                  _vm._v(\n                    \"· Can contain some special characters, including _ (underscore), ! (exclamation mark), ? (question mark), , (comma), . (period), * (asterisk), # (pound sign).\"\n                  )\n                ]),\n                _c(\"br\")\n              ])\n            ]),\n            _c(\"br\"),\n            _vm._m(5),\n            _c(\"div\", { staticClass: \"row m-b-15\" }, [\n              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: {\n                        required: true,\n                        regex: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,})$/\n                      },\n                      expression:\n                        \"{ required: true, regex:/^[_a-z0-9-]+(\\\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\\\.[a-z0-9-]+)*(\\\\.[a-z]{2,})$/ }\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.formData.email,\n                      expression: \"formData.email\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  class: { \"is-invalid\": _vm.errors.has(\"email\") },\n                  attrs: { type: \"text\", name: \"email\", placeholder: \"Email\" },\n                  domProps: { value: _vm.formData.email },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.formData, \"email\", $event.target.value)\n                    }\n                  }\n                }),\n                _c(\"span\", { staticStyle: { color: \"red !important\" } }, [\n                  _vm._v(_vm._s(_vm.errors.first(\"email\")))\n                ]),\n                _c(\"br\"),\n                _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.verification_input,\n                        expression: \"verification_input\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: { \"is-valid\": this.verification_field },\n                    attrs: {\n                      type: \"text\",\n                      placeholder: \"Verification Code\",\n                      \"aria-label\": \"Recipient's username\",\n                      \"aria-describedby\": \"button-addon2\"\n                    },\n                    domProps: { value: _vm.verification_input },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.verification_input = $event.target.value\n                      }\n                    }\n                  }),\n                  _c(\"div\", { staticClass: \"input-group-append\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-sm btn-white\",\n                        attrs: { type: \"button\", disabled: _vm.disabled },\n                        on: { click: _vm.sendCode }\n                      },\n                      [_vm._v(_vm._s(_vm.btntxt))]\n                    )\n                  ])\n                ])\n              ])\n            ]),\n            _c(\"br\"),\n            _vm._m(6),\n            _c(\"div\", { staticClass: \"row m-b-15\" }, [\n              _c(\"div\", { staticClass: \"col-md-12\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"validate\",\n                      rawName: \"v-validate\",\n                      value: { required: true, regex: /^1[34578]\\d{9}$/ },\n                      expression: \"{ required: true, regex:/^1[34578]\\\\d{9}$/ }\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.formData.phone_num,\n                      expression: \"formData.phone_num\"\n                    }\n                  ],\n                  staticClass: \"form-control\",\n                  class: { \"is-invalid\": _vm.errors.has(\"phone number\") },\n                  attrs: {\n                    type: \"text\",\n                    placeholder: \"Phone Number\",\n                    name: \"phone number\"\n                  },\n                  domProps: { value: _vm.formData.phone_num },\n                  on: {\n                    input: function($event) {\n                      if ($event.target.composing) {\n                        return\n                      }\n                      _vm.$set(_vm.formData, \"phone_num\", $event.target.value)\n                    }\n                  }\n                }),\n                _c(\"span\", { staticStyle: { color: \"red !important\" } }, [\n                  _vm._v(_vm._s(_vm.errors.first(\"phone number\")))\n                ])\n              ])\n            ]),\n            _c(\"br\"),\n            _vm._m(7),\n            _vm._m(8)\n          ]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"news-feed\" }, [\n      _c(\"div\", { staticClass: \"news-image\" }),\n      _c(\"div\", { staticClass: \"news-caption\" }, [\n        _c(\"h4\", { staticClass: \"caption-title\" }, [\n          _c(\"b\", [_vm._v(\"Hibernia-Sino\")]),\n          _vm._v(\" Travel Insurance\\n      \")\n        ]),\n        _c(\"p\", [\n          _vm._v(\n            \"Travel with peace of mind. Compare the below plans and buy online with our best price guarantee. Our checkout process is 100% safe and secure and you’ll receive your policy within minutes via email.\"\n          )\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h1\", { staticClass: \"register-header\" }, [\n      _vm._v(\"\\n      Registration\\n      \"),\n      _c(\"small\", [\n        _vm._v(\n          \"Use the following guidelines for creating a secure Hibernia-Sino Travel Insurance Account.\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"control-label\" }, [\n      _vm._v(\"\\n          User Name\\n          \"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"control-label\" }, [\n      _vm._v(\"\\n          Password\\n          \"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"control-label\" }, [\n      _vm._v(\"\\n          Password Confirmation\\n          \"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"control-label\" }, [\n      _vm._v(\"\\n          Email\\n          \"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"control-label\" }, [\n      _vm._v(\"\\n          Phone Number\\n          \"),\n      _c(\"span\", { staticClass: \"text-danger\" }, [_vm._v(\"*\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"register-buttons\" }, [\n      _c(\"button\", { staticClass: \"btn btn-primary btn-block btn-lg\" }, [\n        _vm._v(\"Sign Up\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"m-t-20 m-b-40 p-b-40 text-inverse\" }, [\n      _vm._v(\"\\n          Already a member? Click\\n          \"),\n      _c(\"a\", { attrs: { href: \"/login\" } }, [_vm._v(\"here\")]),\n      _vm._v(\" to login.\\n        \")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}